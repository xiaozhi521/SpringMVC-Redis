<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/context
   http://www.springframework.org/schema/context/spring-context-3.0.xsd
   http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
   http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
    ">

    <!-- 配置扫描的包 -->
    <context:component-scan base-package="com.controller.annotation,com.controller.nonannotation,com.controller.file,com.task"/>
    <!--配置任务扫描-->
    <task:annotation-driven/>
    <!-- 注册HandlerMapper、HandlerAdapter两个映射类 -->
    <mvc:annotation-driven />
    <!--配置 json 转换器，如果不配置，会报 No converter found for return value of type: class com.alibaba.fastjson.JSONObject 错误-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--viewClass：JstlView表示JSP模板页面需要使用JSTL标签库，classpath中必须包含jstl的相关jar包；-->
        <!--<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>-->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <!--文件上传-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="104857600" />
        <property name="maxInMemorySize" value="4096" />
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <mvc:interceptors>
        <!-- 配置自定义的拦截器 -->
        <bean class="com.interceptor.FirstInterceptor"></bean>
        <!-- 配置拦截器(不)作用的路径 -->
        <mvc:interceptor>
            <mvc:mapping path="/*.mvc"/>
            <mvc:mapping path="/**/*.mvc"/>
            <mvc:exclude-mapping path="/hello.mvc"/>
            <mvc:exclude-mapping path="/login/login.mvc"/>
            <mvc:exclude-mapping path="/login/toLogin.mvc"/>
            <bean class="com.interceptor.SecondInterceptor"></bean>
        </mvc:interceptor>
        <!-- 配置 LocaleChanceInterceptor -->
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"></bean>
    </mvc:interceptors>

    <!--异常处理-->
    <bean id="simpleMappingExceptionResolver" class=
            "org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <map>
                <entry key="DatabaseException" value="databaseError"/>
                <entry key="InvalidCreditCardException" value="creditCardError"/>
            </map>
        </property>

        <!-- See note below on how this interacts with Spring Boot -->
        <property name="defaultErrorView" value="error"/>
        <property name="exceptionAttribute" value="ex"/>

        <!-- Name of logger to use to log exceptions. Unset by default,
               so logging is disabled unless you set a value. -->
        <property name="warnLogCategory" value="example.MvcLogger"/>
    </bean>

    <!--<mvc:resource ...../>标记来映射静态页面。映射属性必须是指定http请求的URL模式的Ant模式。
    location属性必须指定一个或多个有效的资源目录位置，其中包含静态页面，包括图片，样式表，JavaScript和其他静态内容。
    可以使用逗号分隔的值列表指定多个资源位置。-->
    <!--<mvc:resources mapping="/pages/**" location="**" />-->

    <!--spring mvc aop对controller切面编程无效解决，配置使Spring采用CGLIB代理-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->

    <!-- 访问静态资源 -->
    <!--<mvc:default-servlet-handler />-->


</beans>